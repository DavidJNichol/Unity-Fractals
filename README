Unity Fractals - Final for Graphics Application Programming Fall 2020. 
The goal is to generate procedural fractals with ECS optimization, hopefully utilizing ray marching.

Commit 1 - Generates cuboid fractals with 2 colors signifying depth. Uses simple batching. Able to produce a depth of 5 (5 child cubes generated per cube) before performance takes a big hit on a GTX 1080. 
Commit 2 - Added more colors that interpolate. Improved batching amount. Generates both cubes and spheres on a random basis. Able to produce a depth of 6 before performance drops. 
Commit 3 - Added more irregularity to the fractal generation. Various random meshes, a probability that the fractal will spawn a child, fractal rotations on update, and a random rotation value that each fractal will start with. 
Commits 4-12 - Accidentally merging my code broke the whole project by changing internal Unity data. These commits were a string of fixing that.
Commit 13 - Created a fresh version of my old project with no errors.
Commit 14 - Introduced a working ECS demo alongside my fractal in the same scene to begin implementing my ECS code into my fractal code.
Commit 15 - Started ECS implementation by adding variance in ECS mesh generation.
Commit 16 - Updated the README
Commit 17 - Adds functional jobs demo to later blend into ECS integration.
Commit 18- Merged main branch.
Commit 19 - Updated README
Commit 20 - Added a job with ECS system demo.
Commit 21 - Merged branch
Commit 22 - Updated README
Commit 23 - Added a test class with the Unity job system mixed with ECS. There are many issues with this that will have to be sorted out.
Commit 24 - Merged branch
Commit 25 - Updated README
Commit 26 - Added a player controller with first person camera attached. Updated scene with new skybox and new fractals.
Commit 27 - Merged branch 
Commit 28 - Updated README
